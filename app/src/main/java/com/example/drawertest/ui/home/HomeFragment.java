//Author(s) name (Individual or corporation): Prashant Upreti
//Date: 11/20/2021
//Title of program: HomeFragment.java
//Type: source code
//Function: it helps populate the data on the home page of the app, "Home Weather Station"
package com.example.drawertest.ui.home;


import android.annotation.SuppressLint;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;


import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;
import androidx.fragment.app.Fragment;

import com.android.volley.Request;
import com.android.volley.toolbox.JsonArrayRequest;
import com.example.drawertest.MyAdapter;
import com.example.drawertest.MySingleton;
import com.example.drawertest.R;
import com.example.drawertest.SensorData;
import com.example.drawertest.databinding.FragmentHomeBinding;
import org.json.JSONException;
import org.json.JSONObject;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Stream;

//Start of first class Home Fragment extends Fragment
public class HomeFragment extends Fragment {
    private FragmentHomeBinding binding; //initializing the bindings
    ListView listView; //initializing the listView
    ArrayList<SensorData> arrayOfSensorData = new ArrayList<>();    //inititalizing an arraylist
    //Whenever the view is created this function is ran inside the main class ~ to main() function
    public View onCreateView(@NonNull LayoutInflater inflater,
                             ViewGroup container, Bundle savedInstanceState) {
        super.onCreate(savedInstanceState); //generic code for the fragment
        binding = FragmentHomeBinding.inflate(inflater, container, false); //generic code for the fragment
        View root = binding.getRoot();  //generic code for the fragment
        fetchJson();    //calling the function fetchJson()
        final ProgressBar loading_spinner=binding.loadingSpinner;   //initializing the progressbar
        final LinearLayout content=binding.content; //initializing the content layout
        loading_spinner.setVisibility(View.VISIBLE);    //calling the loading_spinner to be visible
        content.setVisibility(View.GONE);   //hiding the content layout
        return root;    //generic return for this type of function
    }
    //generic function generated by the navigation drawer layout chose during the initial launch
    @Override
    public void onDestroyView() {
        super.onDestroyView();
        binding = null;
    }
    //function that divides any string by 10 after converting it into a double and then returns string back again
    public String dividebyTen(String str){
        double dnum = Double.parseDouble(str);
        dnum   =   dnum/10;
        DecimalFormat df = new DecimalFormat("#.#");
        df.format(dnum);
        String val    =   String.valueOf(dnum);
        return val;
    }
    //function that fetches data from the url using the volley package
    public void fetchJson(){
        String url = "http://api.plottingly.com/getData.php";   //URL
        final TextView textCreatedAt = binding.textCreatedAt;   //initializing the textView
        final TextView textTemp = binding.textTemp; //initializing the textView
        final TextView textHum = binding.textHum;   //initializing the textView
        final TextView textWind =  binding.textWind;    //initializing the textView
        final TextView textPressure = binding.textPressure; //initializing the textView
        final ProgressBar loading_spinner=binding.loadingSpinner;   //initializing the ProgressBar view
        final LinearLayout content=binding.content; //initializing the content view
        //linking dropdown by id in the xml layout
        Spinner spinner = (Spinner) binding.getRoot().findViewById(R.id.spinner);   //Spinner is the dropdown to filter by date
        //Volley JsonArray Request Starts
        @SuppressLint("SetTextI18n") JsonArrayRequest jsonArrayRequest = new JsonArrayRequest
                (Request.Method.GET, url, null, response -> {
                    try {
                        JSONObject jsonObject = response.getJSONObject(0);  //choosing top array of strings
                        String created_at = jsonObject.getString("created_at"); //getting the string with value of "created_at"
                        String air_temp = jsonObject.getString("air_temperature"); //getting the string with value of "created_at"
                        String humidity = jsonObject.getString("humidity"); //getting the string with value of "created_at"
                        String wind_speed = jsonObject.getString("wind_speed"); //getting the string with value of "created_at"
                        String pressure = jsonObject.getString("barometric_pressure"); //getting the string with value of "created_at"
                        textCreatedAt.setText("Updated on: "+created_at);   //Updating the Updated on status in the top data
                        textTemp.setText(dividebyTen(air_temp));    //setting the fetched data into their respective textView by dividing then by ten
                        textHum.setText(dividebyTen(humidity)); //setting the fetched data into their respective textView by dividing then by ten
                        textWind.setText(dividebyTen(wind_speed));  //setting the fetched data into their respective textView by dividing then by ten
                        textPressure.setText(dividebyTen(pressure));    //setting the fetched data into their respective textView by dividing then by ten

                        HashSet<String> createdAtList=new HashSet<String>();
                        for(int i=0;i<response.length();i++){
                            JSONObject jsonObject2 = response.getJSONObject(i);
                            String created_at2=jsonObject2.getString("created_at");
                            String created_at2_trim[]=created_at2.split(",",2);
                            createdAtList.add(created_at2_trim[0]);
                        }

                        ArrayList<String> createdAtArrayList=new ArrayList<>(createdAtList);
                        Collections.sort(createdAtArrayList,Collections.reverseOrder());
                        ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>
                                (getContext(), android.R.layout.simple_spinner_item,
                                        createdAtArrayList);
                        spinnerArrayAdapter.setDropDownViewResource(android.R.layout
                                .simple_spinner_dropdown_item);
                        spinner.setAdapter(spinnerArrayAdapter);
                        loading_spinner.setVisibility(View.GONE);
                        content.setVisibility(View.VISIBLE);
                        //help: https://camposha.info/android-examples/android-volley-spinner/
                        //Helps in creating date filter. This listener basically checks for any change in the spinner and act as it detects.
                        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
                            @Override
                            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
                                try {
                                    arrayOfSensorData.clear();
                                    //getting rest of the data into an array and then to an adapter with date filter
                                    for(int i=1;i<response.length();i++){
                                        JSONObject jsonObject1 = response.getJSONObject(i); //select rest of the data excluding the top one
                                        //check if the date selected matches with all the data of the particular date
                                        if(jsonObject1.getString("created_at").split(",",2)[0].equals(spinner.getItemAtPosition(position).toString())) {
                                            String id1 = jsonObject1.getString("id"); //getting the string with value of "id"
                                            String air_temp1 = jsonObject1.getString("air_temperature"); //getting the string with value of "air_temperature"
                                            String humidity1 = jsonObject1.getString("humidity"); //getting the string with value of "humidity"
                                            String wind_speed1 = jsonObject1.getString("wind_speed"); //getting the string with value of "wind_speed"
                                            String pressure1 = jsonObject1.getString("barometric_pressure"); //getting the string with value of "barometric_pressure"
                                            String created_at1 = jsonObject1.getString("created_at"); //getting the string with value of "created_at"
                                            SensorData sensorData = new SensorData(id1, dividebyTen(air_temp1), dividebyTen(humidity1), dividebyTen(wind_speed1), dividebyTen(pressure1), created_at1);
                                            arrayOfSensorData.add(sensorData);  //Add everything from the constructor to the arraylist
                                        }
                                    }
                                    listView = binding.listView;    //initializing the listView
                                    MyAdapter adapter = new MyAdapter(getActivity(), arrayOfSensorData);    //passing the arraylist through the adapter
                                    adapter.notifyDataSetChanged(); //notifyDataSetChanged() function
                                    listView.setAdapter(adapter); //setting the adapter for listView
                                    //whenever an item in listview is clicked perform this action
                                    listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                                        public void onItemClick(AdapterView<?> adapter, View view, int position, long id) {
                                            String itemPicked = "Air Temperature: "+arrayOfSensorData.get(position).getAirTemperature()+" °C\nHumidity: "+
                                                                arrayOfSensorData.get(position).getHumidity()+" %\nWind Speed: "+
                                                                arrayOfSensorData.get(position).getWindSpeed()+" m/s\nBarometric Pressure: "+
                                                                arrayOfSensorData.get(position).getBarometricPressure()+" hPa\nOn "+
                                                                arrayOfSensorData.get(position).getCreatedAt();
                                            //make a toast frame appear and disappear for like 2 seconds
                                            Toast.makeText(getActivity(), itemPicked, Toast.LENGTH_SHORT).show();
                                        }
                                    });
                                }
                                catch (Exception e){

                                }
                            }

                            @Override
                            public void onNothingSelected(AdapterView<?> parent) {
                            }
                        });
                    } catch(JSONException e){
                        e.printStackTrace();
                    }
                }, error -> {
                    //if error do this
                    content.setVisibility(View.GONE);   //content is set as invisible
                    loading_spinner.setVisibility(View.VISIBLE);    //preloader or the spinning animation is set to be visible
                    Log.v("MyActivity","Something went wrong!");    //just something in the log of the android studio to track
                    error.printStackTrace();    //prints any erro just like normal JAVA

                });

        // Access the RequestQueue through your singleton class.
        MySingleton.getInstance(getActivity()).addToRequestQueue(jsonArrayRequest);
    }

}